
R version 3.0.2 (2013-09-25) -- "Frisbee Sailing"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> #################
> library(ChemmineR)
> #################
> ##data(sdfsample)
> ##cid(sdfsample)<-sdfid(sdfsample)
> ##sdfset<-sdfsample
> files<-list.files(pattern=".sdf", recursive=F)
> t<-1
> sdfset<-read.SDFset(files[t])
> ###############
> cid(sdfset)<-sdfid(sdfset)
> #write.SDF(sdfset,file="load_me.sdf", sig=T)
> ###############
> ################
> smiset<-sdf2smiles(sdfset) #(sdfset[1:2])
Using ChemmineOB
> ################
> WriteSdfOut<-function(a){
+ write.SDF(sdfset[[a]], file=paste(cid(sdfset[a]), ".sdf", sep=""), sig=T, cid=T)
+ }
> a<-1:length(smiset) #change to 2 for testing
> lapply(a,WriteSdfOut)
[[1]]
NULL

[[2]]
NULL

[[3]]
NULL

[[4]]
NULL

[[5]]
NULL

[[6]]
NULL

[[7]]
NULL

[[8]]
NULL

[[9]]
NULL

[[10]]
NULL

[[11]]
NULL

[[12]]
NULL

[[13]]
NULL

[[14]]
NULL

[[15]]
NULL

[[16]]
NULL

[[17]]
NULL

[[18]]
NULL

[[19]]
NULL

[[20]]
NULL

[[21]]
NULL

[[22]]
NULL

[[23]]
NULL

[[24]]
NULL

[[25]]
NULL

[[26]]
NULL

[[27]]
NULL

[[28]]
NULL

[[29]]
NULL

[[30]]
NULL

[[31]]
NULL

[[32]]
NULL

[[33]]
NULL

[[34]]
NULL

[[35]]
NULL

[[36]]
NULL

[[37]]
NULL

[[38]]
NULL

[[39]]
NULL

[[40]]
NULL

[[41]]
NULL

[[42]]
NULL

[[43]]
NULL

[[44]]
NULL

[[45]]
NULL

[[46]]
NULL

[[47]]
NULL

[[48]]
NULL

[[49]]
NULL

[[50]]
NULL

[[51]]
NULL

[[52]]
NULL

[[53]]
NULL

[[54]]
NULL

> ################
> WriteSmiOut<-function(a){
+ cid(smiset)<-cid(sdfset[a])
+ write.SMI(smi=smiset[[a]], file=paste(cid(sdfset[a]), ".smi", sep=""), cid=T)
+ }
> a<-1:length(smiset) #change to 2 for testing
> lapply(a,WriteSmiOut)
[[1]]
NULL

[[2]]
NULL

[[3]]
NULL

[[4]]
NULL

[[5]]
NULL

[[6]]
NULL

[[7]]
NULL

[[8]]
NULL

[[9]]
NULL

[[10]]
NULL

[[11]]
NULL

[[12]]
NULL

[[13]]
NULL

[[14]]
NULL

[[15]]
NULL

[[16]]
NULL

[[17]]
NULL

[[18]]
NULL

[[19]]
NULL

[[20]]
NULL

[[21]]
NULL

[[22]]
NULL

[[23]]
NULL

[[24]]
NULL

[[25]]
NULL

[[26]]
NULL

[[27]]
NULL

[[28]]
NULL

[[29]]
NULL

[[30]]
NULL

[[31]]
NULL

[[32]]
NULL

[[33]]
NULL

[[34]]
NULL

[[35]]
NULL

[[36]]
NULL

[[37]]
NULL

[[38]]
NULL

[[39]]
NULL

[[40]]
NULL

[[41]]
NULL

[[42]]
NULL

[[43]]
NULL

[[44]]
NULL

[[45]]
NULL

[[46]]
NULL

[[47]]
NULL

[[48]]
NULL

[[49]]
NULL

[[50]]
NULL

[[51]]
NULL

[[52]]
NULL

[[53]]
NULL

[[54]]
NULL

There were 50 or more warnings (use warnings() to see the first 50)
> ###############
> system("for i in *.smi
+ do babel $i -O $i.png 
+ done")
1 molecule converted
52 audit log messages 
1 molecule converted
47 audit log messages 
1 molecule converted
47 audit log messages 
1 molecule converted
47 audit log messages 
1 molecule converted
47 audit log messages 
1 molecule converted
47 audit log messages 
1 molecule converted
48 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
46 audit log messages 
1 molecule converted
46 audit log messages 
1 molecule converted
43 audit log messages 
1 molecule converted
52 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
48 audit log messages 
1 molecule converted
51 audit log messages 
1 molecule converted
52 audit log messages 
==============================
*** Open Babel Error  in OpenAndSetFormat
  Cannot read input format "" for file "Linolenic"
==============================
*** Open Babel Error  in OpenAndSetFormat
  Cannot open Acid.smi
==============================
*** Open Babel Error  in OpenAndSetFormat
  Cannot read input format "" for file "Linolenic"
0 PNG_files converted
3 errors 
1 molecule converted
46 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
47 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
52 audit log messages 
1 molecule converted
51 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
51 audit log messages 
1 molecule converted
52 audit log messages 
1 molecule converted
48 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
47 audit log messages 
1 molecule converted
52 audit log messages 
1 molecule converted
47 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
47 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
48 audit log messages 
1 molecule converted
47 audit log messages 
1 molecule converted
51 audit log messages 
1 molecule converted
47 audit log messages 
1 molecule converted
47 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
48 audit log messages 
1 molecule converted
51 audit log messages 
1 molecule converted
46 audit log messages 
1 molecule converted
47 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
50 audit log messages 
1 molecule converted
50 audit log messages 
> ###############
> #source("hwriteMoreTable.R") #works
> source("hwriteMore.R") #fixed
Error in `colnames<-`(`*tmp*`, value = c("#", "name", "Query compound",  : 
  length of 'dimnames' [2] not equal to array extent
Calls: source -> withVisible -> eval -> eval -> colnames<-
Execution halted
